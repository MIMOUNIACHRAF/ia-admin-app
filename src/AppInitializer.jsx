import { useEffect, useRef } from "react";
import { useDispatch } from "react-redux";
import authService from "./services/authService";
import { setTokens } from "./features/auth/authSlice";

export default function AppInitializer({ children }) {
  const dispatch = useDispatch();
  const hasChecked = useRef(false);

  useEffect(() => {
    if (hasChecked.current) return;
    hasChecked.current = true;

    const initAuth = async () => {
      // 1Ô∏è‚É£ V√©rifier si access d√©j√† pr√©sent en m√©moire/localStorage
      const access = authService.getAccessToken();
      if (access) {
        console.log("‚úÖ Access token d√©j√† pr√©sent, pas de refresh");
        dispatch(setTokens({ access }));
        return;
      }

      // 2Ô∏è‚É£ V√©rifier si refresh token pr√©sent
      if (!authService.isRefreshTokenPresent()) {
        console.log("‚ùå Pas de refresh token ‚Üí logout");
        await authService.logout();
        return;
      }

      // 3Ô∏è‚É£ Essayer de rafra√Æchir l'access token
      const newAccess = await authService.refreshAccessToken();
      if (newAccess) {
        console.log("üîÑ Access token rafra√Æchi avec succ√®s");
        dispatch(setTokens({ access: newAccess }));
      } else {
        console.log("‚ùå √âchec du refresh ‚Üí logout");
        await authService.logout();
      }
    };

    initAuth();
  }, [dispatch]);

  return children;
}
